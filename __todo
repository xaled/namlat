- mvp:
    - server/client:
        x run_flask_service, _pull_client_request, _update_client_request, threadproof
        x execute_job (load module)
        x load_data
        x sign_updates, check_signature
        x apply_updates
        x check_conflicts, , calculate_commit_id
    - reporting with url, and type, and data:
        x design (rss-stuff report, unique uri, multiple report, report html/types etc...) & td *
        x report helpers *:
            x report function
            x create report (class and constructor)
        - report job:
            x report flowchart *:
            - report main *:
                - handler
                    x what is a handler? class/config/fix
                    x has_entries, get entries
                    - classes:
                        - Mail : - make report & send
                        - sms : - make report & send
                        - telegram : - make report & send
                    - get_report_handlers:
                        - create instances & singleton
                - update_new_entries
                    - for each
                    - handle routing
            - bb code interpreter *
        - report_conflicts, *
        - report_logs & exeptions & logging handler for reports *
    - (hors sujet): classes and constructors:
        - reports
        - updates/edits
    - (hors sujet) jsondb style to generate edits (commit vs get_edits + rollback)
    - job templates
    - basic jobs:
        - job1: avito
        - job2: git + sync
        - job3: disk usage
        - job4: dirs in desktop
        - job5: abstract update (+imp, apt-get, git)
        - job6: wunderlist weekly report
        - job7: namlat stats: errors, uptime, data usage
    - next jobs list:
        - desktop and other files monitoring
        - android integration (su or not to su)
